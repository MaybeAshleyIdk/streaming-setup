# OBS has built-in support to export scene collections, but that also exports some setup-specific details
# (like absolute paths to local files) and not to mention that it exposes private information like stream keys, so
# this file is a setup-agnostic, high-level description of the scene collection, which is safe to be tracked in VC and
# safe to make public.

# The source type "Application Audio Capture (PipeWire)" (AAC) comes from
# the plugin <https://github.com/dimtpap/obs-pipewire-audio-capture>.

# Note that the canvas is assumed to have an aspect ratio of 16:9

Global Audio Devices = all disabled

Scenes {
	#region public scenes

	"Main" {
		Sources {
			"Main — Overlays" # group
			"Screen Capture"
			"Common Sources" # scene
		}
	}

	"Break — Be Right Back" {
		Sources {
			"Be Right Back — Primary Text Image" {
				Transform {
					Position = (<canvas width> / 2) | (<canvas height> / 3)
					Rotation = <default>
					# Note: On QHD canvases this will be the same size as the image's dimensions.
					Size = (<canvas width> * 0.326953125) | (<canvas height> * (127/1440))
					Positional Alignment = Center
					Bounding Box Type = <default>
					Crop to Bounding Box = <default>
					Crop Left = <default>
					Crop Right = <default>
					Crop Top = <default>
					Crop Bottom = <default>
				}
			}

			"Break w/out Primary Text" # scene
		}
	}

	"Break — Doing A Thing" {
		Sources {
			"Doing A Thing — Primary Text Image" {
				Transform {
					Position = (<canvas width> / 2) | (<canvas height> / 3)
					Rotation = <default>
					# Note: On QHD canvases this will be the same size as the image's dimensions.
					Size = (<canvas width> * 0.67734375) | (<canvas height> * (127/1440))
					Positional Alignment = Center
					Bounding Box Type = <default>
					Crop to Bounding Box = <default>
					Crop Left = <default>
					Crop Right = <default>
					Crop Top = <default>
					Crop Bottom = <default>
				}
			}

			"Break w/out Primary Text" # scene
		}
	}

	"Starting" {
		Sources {
			"Starting — Text Image" {
				Transform {
					Position = (<canvas width> / 3 * 2) | (<canvas height> / 3)
					Rotation = <default>
					# Note: On QHD canvases this will be the same size as the image's dimensions.
					Size = (<canvas width> * 0.370703125) | (<canvas height> * 0.11875)
					Positional Alignment = Center
					Bounding Box Type = <default>
					Crop to Bounding Box = <default>
					Crop Left = <default>
					Crop Right = <default>
					Crop Top = <default>
					Crop Bottom = <default>
				}
			}

			"Starting/Ending w/out Text" # scene
		}
	}

	"Ending" {
		Sources {
			"Ending — Text Image" {
				Transform {
					Position = (<canvas width> / 3 * 2) | (<canvas height> / 3)
					Rotation = <default>
					# Note: On QHD canvases this will be the same size as the image's dimensions.
					Size = (<canvas width> * 0.303515625) | (<canvas height> * (29/240))
					Positional Alignment = Center
					Bounding Box Type = <default>
					Crop to Bounding Box = <default>
					Crop Left = <default>
					Crop Right = <default>
					Crop Top = <default>
					Crop Bottom = <default>
				}
			}

			"Starting/Ending w/out Text" # scene
		}
	}

	#endregion

	#region utility scenes

	"┌─────── Utility Scenes ───────┐" {
		# Empty. This is just a separator.
	}

	"AACs" {
		Sources {
			# Hide the Discord group if not currently in a voice call that is supposed to be captured.
			"AACs: Firefox" # group
			"AACs: Discord" # group
			"Game AACs" # scene
			"AACs: mpv" # group
		}
	}

	"Game AACs" {
		Sources {
			# Selectively show/hide the games not being captured to avoid cluttering up the Audio Mixer.
			"AACs: ANIMAL WELL" # group
			"AACs: Baba Is You" # group
			"AACs: Celeste" # group
			"AACs: Cuphead" # group
			"AACs: Dead Cells" # group
			"AACs: DeSmuME" # group
			"AACs: Halo MCC" # group
			"AACs: Hollow Knight" # group
			"AACs: Ghost Master" # group
			"AACs: GTFO" # group
			"AACs: It Takes Two" # group
			"AACs: Left 4 Dead 2" # group
			"AACs: Plants vs. Zombies" # group
			"AACs: Star of Providence" # group
			"AACs: Team Fortress 2" # group
			"AACs: ULTRAKILL" # group
			"AACs: Unrailed!" # group
		}
	}

	"Break w/out Primary Text" {
		Sources {
			"Break — Overlays" # group

			"Break — Secondary Text Image" {
				Transform {
					Position = (<canvas width> / 2) | <canvas height>
					Rotation = <default>
					# Note: On QHD canvases this will be the same size as the image's dimensions.
					Size = (<canvas width> * 0.44140625) | (<canvas height> * (49/360))
					Positional Alignment = Bottom Left
					Bounding Box Type = <default>
					Crop to Bounding Box = <default>
					Crop Left = <default>
					Crop Right = <default>
					Crop Top = <default>
					Crop Bottom = <default>
				}
			}

			"Common Sources" # scene
		}
	}

	"Starting/Ending w/out Text" {
		Sources {
			"Starting/Ending — Overlays" # group
			"Common Sources" # scene
		}
	}

	"Twitch Chat w/ Transparency" {
		Sources {
			"Twitch Chat"
		}

		Effect Filters {
			"Transparency": Color Correction {
				Gamma = <default>
				Contrast = <default>
				Brightness = <default>
				Saturation = <default>
				Hue Shift = <default>
				Opacity = 0.7500
				Color Multiply = <default>
				Color Add = <default>
			}
		}
	}

	"Common Sources" {
		Sources {
			"Water Background" # scene
			"Common Audio" # group
		}
	}

	"Water Background" {
		Sources {
			"Water Background Dimmer"
			"Water Background Image Slide Show"
		}
	}

	#endregion

	"┌────────── Other ──────────┐" {
		# Empty. This is just a separator.
	}

	"Recording" {
		Sources {
			"Screen Capture"
			"Common Audio" # group
		}
	}
}

all sources {
	#region Scene: Main

	"Screen Capture": Screen Capture (PipeWire) {
		Properties {
			Show Cursor = true
		}
	}

	"Main — Overlays": Group {
		sources {
			"Discord Reactive"

			"Twitch Chat w/ Transparency" { # scene
				Transform {
					Position = <default> | <canvas height>
					Rotation = <default>
					Size = <default> | <default>
					Positional Alignment = Bottom Left
					Bounding Box Type = <default>
					Crop to Bounding Box = <default>
					Crop Left = <default>
					Crop Right = <same as the property `Width` from the source "Twitch Chat">
					Crop Top = (<canvas height> / 2)
					Crop Bottom = <default>
				}
			}

			"Twitch Alert Box" {
				Transform {
					Position = (<canvas width> * 0.95) | <default>
					Rotation = <default>
					Size = (<default> * 0.75) | (<default> * 0.75)
					Positional Alignment = Top Right
					Bounding Box Type = <default>
					Crop to Bounding Box = <default>
					Crop Left = <default>
					Crop Right = <default>
					Crop Top = <default>
					Crop Bottom = <default>
				}
			}

			"Twitch Prediction Alert Box" {
				Transform {
					Position = (<canvas width> / 3 * 2) | 0.0000 px
					Rotation = <default>
					Size = ((<source width> / <source height>) * (<canvas height> / 16 * 3)) | (<canvas height> / 16 * 3)
					Positional Alignment = Top Center
					Bounding Box Type = <default>
					Crop to Bounding Box = <default>
					Crop Left = <default>
					Crop Right = <default>
					Crop Top = <default>
					Crop Bottom = <default>
				}
			}
		}
	}

	#endregion

	#region break

	"Be Right Back — Primary Text Image": Image {
		Properties {
			Image File = "./scenes/break/be-right-back/primary-text-image.png"
			Unload image when not showing = false
			Apply alpha in linear space = <default>
		}
	}

	"Doing A Thing — Primary Text Image": Image {
		Properties {
			Image File = "./scenes/break/doing-a-thing/primary-text-image.png"
			Unload image when not showing = false
			Apply alpha in linear space = <default>
		}
	}

	"Break — Secondary Text Image": Image {
		Properties {
			Image File = "./scenes/break/secondary-text-image.png"
			Unload image when not showing = false
			Apply alpha in linear space = <default>
		}
	}

	"Break — Overlays": Group {
		sources {
			"Discord Reactive"

			"Twitch Chat" {
				Transform {
					Position = <default> | <canvas height>
					Rotation = <default>
					Size = <default> | <default>
					Positional Alignment = Bottom Left
					Bounding Box Type = <default>
					Crop to Bounding Box = <default>
					Crop Left = <default>
					Crop Right = <default>
					Crop Top = round(<canvas height> * 0.4)
					Crop Bottom = <default>
				}
			}

			"Twitch Alert Box" {
				Transform {
					Position = <canvas width> | (<canvas height> * 0.4)
					Rotation = <default>
					Size = <default> | <default>
					Positional Alignment = Top Right
					Bounding Box Type = <default>
					Crop to Bounding Box = <default>
					Crop Left = <default>
					Crop Right = <default>
					Crop Top = <default>
					Crop Bottom = <default>
				}
			}

			"Twitch Prediction Alert Box" {
				Transform {
					Position = (<canvas width> / 2) | <default>
					Rotation = <default>
					Size = ((<source width> / <source height>) * (<canvas height> / 4)) | (<canvas height> / 4)
					Positional Alignment = Top Center
					Bounding Box Type = <default>
					Crop to Bounding Box = <default>
					Crop Left = <default>
					Crop Right = <default>
					Crop Top = <default>
					Crop Bottom = <default>
				}
			}
		}
	}

	#endregion

	#region starting and ending

	"Starting — Text Image": Image {
		Properties {
			Image File = "./scenes/starting/text-image.png"
			Unload image when not showing = false
			Apply alpha in linear space = <default>
		}
	}

	"Ending — Text Image": Image {
		Properties {
			Image File = "./scenes/ending/text-image.png"
			Unload image when not showing = false
			Apply alpha in linear space = <default>
		}
	}

	"Starting/Ending — Overlays": Group {
		sources {
			"Discord Reactive"

			"Twitch Chat"

			"Twitch Alert Box" {
				Transform {
					Position = (<canvas width> / 3 * 2) | <canvas height>
					Rotation = <default>
					Size = <default> | <default>
					Positional Alignment = Bottom Center
					Bounding Box Type = <default>
					Crop to Bounding Box = <default>
					Crop Left = <default>
					Crop Right = <default>
					Crop Top = <default>
					Crop Bottom = <default>
				}
			}

			"Twitch Prediction Alert Box" {
				Transform {
					Position = (<canvas width> / 3 * 2) | 0.0000 px
					Rotation = <default>
					Size = ((<source width> / <source height>) * (<canvas height> / 4)) | (<canvas height> / 4)
					Positional Alignment = Top Center
					Bounding Box Type = <default>
					Crop to Bounding Box = <default>
					Crop Left = <default>
					Crop Right = <default>
					Crop Top = <default>
					Crop Bottom = <default>
				}
			}
		}
	}

	#endregion

	#region overlays

	# <https://reactive.fugi.tech/>
	"Discord Reactive": Browser {
		Properties {
			Local file = false
			URL = "https://reactive.fugi.tech/group/?layer-name=Discord+Reactive+-+Group"
			Width = round(<canvas width> * 0.3125)
			Height = round(<canvas width> * (5/36))
			Control audio via OBS = false
			FPS = 60
			Custom CSS = "@import url('https://fonts.googleapis.com/css2?family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap');

body {
	background-color: rgba(0, 0, 0, 0);
	margin: 0px auto;
	overflow: hidden;
	font-family: \"Ubuntu\", sans-serif !important;
}"
			Shutdown source when not visible = false
			Refresh browser when source becomes active = false
			Page permissions = Read access to OBS status information
		}
	}

	"Twitch Chat": Browser {
		Properties {
			Local file = false
			# The URL for Streamlabs' chat box can be obtained at <https://streamlabs.com/dashboard#/widgets/chat-box>
			# and it should look somewhat like "https://streamlabs.com/widgets/chat-box/v1/..."
			URL = [setup-specific]
			# 5/12 (~0.4167) comes from the default width of browser sources (800) divided by the width of FHD (1920).
			Width = round(<canvas width> * (5/12))
			Height = <canvas height>
			Control audio via OBS = false
			FPS = 60
			Custom CSS = <default>
			Shutdown source when not visible = false
			Refresh browser when source becomes active = false
			Page permissions = Read access to OBS status information
		}
	}

	"Twitch Alert Box": Browser {
		Properties {
			Local file = false
			URL = [setup-specific] # https://dashboard.twitch.tv/widgets/alertbox#...
			Width = round(<canvas width> * 0.3125)
			Height = round(<canvas height> * (5/9))
			Control audio via OBS = true
			FPS = 60
			Custom CSS = <default>
			Shutdown source when not visible = false
			Refresh browser when source becomes active = false
			Page permissions = Read access to OBS status information
		}
	}

	# <https://www.boingy.co.uk/predictions>
	"Twitch Prediction Alert Box": Browser {
		Properties {
			Local file = false
			URL = [setup-specific] # <https://www.boingy.co.uk/predictions/[username]/overlay>
			Width = 500
			Height = 187
			Control audio via OBS = true
			FPS = 60
			Custom CSS = "@import url('https://fonts.googleapis.com/css2?family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap');

body {
	background-color: rgba(0, 0, 0, 0);
	margin: 0px auto;
	overflow: hidden;
	font-family: \"Ubuntu\", sans-serif !important;
}"
			Shutdown source when not visible = false
			Refresh browser when source becomes active = false
			Page permissions = Read access to OBS status information
		}
	}

	#endregion

	#region Scene: Common Sources

	"Mic": Audio Input Capture (PipeWire) {
		Properties {
			Device = [setup-specific] # This should just be the system default device.
		}

		Audio Filters {
			"Noise Suppression": Noise Suppression {
				Method = RNNoise (good quality, more CPU usage)
			}

			"Noise Gate": Noise Gate {
				Close Threshold = -52.00 dB
				Open Threshold = -44.00 dB
				Attack Time = <default>
				Hold Time = <default>
				Release Time = <default>
			}

			# "Gain": Gain {
			# 	Gain = 2.00dB
			# }

			# "Limiter": Limiter {
			# 	Threshold = <default>
			# 	Release = <default>
			# }
		}
	}

	"Common Audio": Group {
		sources {
			"Mic"
			"AACs" # scene
		}
	}

	#endregion

	#region Scene: AACs

	#region Firefox

	"AAC: Firefox (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by binary name, fallback to app name
			Application = firefox
			Capture all apps except selected = false
		}
	}

	"AAC: Firefox (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by binary name, fallback to app name
			Application = firefox
			Capture all apps except selected = false
		}
	}

	"AACs: Firefox": Group {
		sources {
			"AAC: Firefox (Recording)"
			"AAC: Firefox (Streaming)"
		}
	}

	#endregion

	#region Discord

	"AAC: Discord (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by binary name, fallback to app name
			Application = Discord
			Capture all apps except selected = false
		}
	}

	"AAC: Discord (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by binary name, fallback to app name
			Application = Discord
			Capture all apps except selected = false
		}
	}

	"AACs: Discord": Group {
		sources {
			"AAC: Discord (Recording)"
			"AAC: Discord (Streaming)"
		}
	}

	#endregion

	#region mpv

	"AAC: mpv (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by binary name, fallback to app name
			Application = mpv
			Capture all apps except selected = false
		}
	}

	"AAC: mpv (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by binary name, fallback to app name
			Application = mpv
			Capture all apps except selected = false
		}
	}

	"AACs: mpv": Group {
		sources {
			"AAC: mpv (Recording)"
			"AAC: mpv (Streaming)"
		}
	}

	#endregion

	#endregion

	#region Scene: Game AACs

	# Note: This is Linux specific. (most games played through Steam Proton)

	#region ANIMAL WELL

	"AAC: ANIMAL WELL (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Animal Well"
			Capture all apps except selected = false
		}
	}

	"AAC: ANIMAL WELL (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Animal Well"
			Capture all apps except selected = false
		}
	}

	"AACs: ANIMAL WELL": Group {
		sources {
			"AAC: ANIMAL WELL (Recording)"
			"AAC: ANIMAL WELL (Streaming)"
		}
	}

	#endregion

	#region Baba Is You

	"AAC: Baba Is You (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by binary name, fallback to app name
			Application = "Chowdren" # ???
			Capture all apps except selected = false
		}
	}

	"AAC: Baba Is You (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by binary name, fallback to app name
			Application = "Chowdren" # ???
			Capture all apps except selected = false
		}
	}

	"AACs: Baba Is You": Group {
		sources {
			"AAC: Baba Is You (Recording)"
			"AAC: Baba Is You (Streaming)"
		}
	}

	#endregion

	#region Celeste

	"AAC: Celeste (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Celeste.bin.x86_64"
			Capture all apps except selected = false
		}
	}

	"AAC: Celeste (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Celeste.bin.x86_64"
			Capture all apps except selected = false
		}
	}

	"AACs: Celeste": Group {
		sources {
			"AAC: Celeste (Recording)"
			"AAC: Celeste (Streaming)"
		}
	}

	#endregion

	#region Cuphead

	"AAC: Cuphead (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Cuphead.exe"
			Capture all apps except selected = false
		}
	}

	"AAC: Cuphead (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Cuphead.exe"
			Capture all apps except selected = false
		}
	}

	"AACs: Cuphead": Group {
		sources {
			"AAC: Cuphead (Recording)"
			"AAC: Cuphead (Streaming)"
		}
	}

	#endregion

	#region Dead Cells

	"AAC: Dead Cells (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "deadcells"
			Capture all apps except selected = false
		}
	}

	"AAC: Dead Cells (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "deadcells"
			Capture all apps except selected = false
		}
	}

	"AACs: Dead Cells": Group {
		sources {
			"AAC: Dead Cells (Recording)"
			"AAC: Dead Cells (Streaming)"
		}
	}

	#endregion

	#region DeSmuME

	"AAC: DeSmuME (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by binary name, fallback to app name
			Application = "desmume"
			Capture all apps except selected = false
		}
	}

	"AAC: DeSmuME (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by binary name, fallback to app name
			Application = "desmume"
			Capture all apps except selected = false
		}
	}

	"AACs: DeSmuME": Group {
		sources {
			"AAC: DeSmuME (Recording)"
			"AAC: DeSmuME (Streaming)"
		}
	}

	#endregion

	#region Halo MCC

	"AAC: Halo MCC (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Halo: The Master Chief Collection"
			Capture all apps except selected = false
		}
	}

	"AAC: Halo MCC (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Halo: The Master Chief Collection"
			Capture all apps except selected = false
		}
	}

	"AACs: Halo MCC": Group {
		sources {
			"AAC: Halo MCC (Recording)"
			"AAC: Halo MCC (Streaming)"
		}
	}

	#endregion

	#region Hollow Knight

	"AAC: Hollow Knight (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "hollow_knight.x86_64"
			Capture all apps except selected = false
		}
	}

	"AAC: Hollow Knight (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "hollow_knight.x86_64"
			Capture all apps except selected = false
		}
	}

	"AACs: Hollow Knight": Group {
		sources {
			"AAC: Hollow Knight (Recording)"
			"AAC: Hollow Knight (Streaming)"
		}
	}

	#endregion

	#region Ghost Master

	"AAC: Ghost Master (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Empire Interactive ghost"
			Capture all apps except selected = false
		}
	}

	"AAC: Ghost Master (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Empire Interactive ghost"
			Capture all apps except selected = false
		}
	}

	"AACs: Ghost Master": Group {
		sources {
			"AAC: Ghost Master (Recording)"
			"AAC: Ghost Master (Streaming)"
		}
	}

	#endregion

	#region GTFO

	"AAC: GTFO (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "GTFO.exe"
			Capture all apps except selected = false
		}
	}

	"AAC: GTFO (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "GTFO.exe"
			Capture all apps except selected = false
		}
	}

	"AACs: GTFO": Group {
		sources {
			"AAC: GTFO (Recording)"
			"AAC: GTFO (Streaming)"
		}
	}

	#endregion

	#region It Takes Two

	"AAC: It Takes Two (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "It Takes Two"
			Capture all apps except selected = false
		}
	}

	"AAC: It Takes Two (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "It Takes Two"
			Capture all apps except selected = false
		}
	}

	"AACs: It Takes Two": Group {
		sources {
			"AAC: It Takes Two (Recording)"
			"AAC: It Takes Two (Streaming)"
		}
	}

	#endregion

	#region Left 4 Dead 2

	"AAC: Left 4 Dead 2 (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Left 4 Dead 2"
			Capture all apps except selected = false
		}
	}

	"AAC: Left 4 Dead 2 (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Left 4 Dead 2"
			Capture all apps except selected = false
		}
	}

	"AACs: Left 4 Dead 2": Group {
		sources {
			"AAC: Left 4 Dead 2 (Recording)"
			"AAC: Left 4 Dead 2 (Streaming)"
		}
	}

	#endregion

	#region Plants vs. Zombies

	"AAC: Plants vs. Zombies (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Plants vs. Zombies"
			Capture all apps except selected = false
		}
	}

	"AAC: Plants vs. Zombies (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Plants vs. Zombies"
			Capture all apps except selected = false
		}
	}

	"AACs: Plants vs. Zombies": Group {
		sources {
			"AAC: Plants vs. Zombies (Recording)"
			"AAC: Plants vs. Zombies (Streaming)"
		}
	}

	#endregion

	#region Star of Providence

	"AAC: Star of Providence (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Star of Providence"
			Capture all apps except selected = false
		}
	}

	"AAC: Star of Providence (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "Star of Providence"
			Capture all apps except selected = false
		}
	}

	"AACs: Star of Providence": Group {
		sources {
			"AAC: Star of Providence (Recording)"
			"AAC: Star of Providence (Streaming)"
		}
	}

	#endregion

	#region Team Fortress 2

	"AAC: Team Fortress 2 (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "tf_linux64"
			Capture all apps except selected = false
		}
	}

	"AAC: Team Fortress 2 (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "tf_linux64"
			Capture all apps except selected = false
		}
	}

	"AACs: Team Fortress 2": Group {
		sources {
			"AAC: Team Fortress 2 (Recording)"
			"AAC: Team Fortress 2 (Streaming)"
		}
	}

	#endregion

	#region ULTRAKILL

	"AAC: ULTRAKILL (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "ULTRAKILL.exe"
			Capture all apps except selected = false
		}
	}

	"AAC: ULTRAKILL (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "ULTRAKILL.exe"
			Capture all apps except selected = false
		}
	}

	"AACs: ULTRAKILL": Group {
		sources {
			"AAC: ULTRAKILL (Recording)"
			"AAC: ULTRAKILL (Streaming)"
		}
	}

	#endregion

	#region Unrailed!

	"AAC: Unrailed! (Recording)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "FMOD Audio" # ???
			Capture all apps except selected = false
		}
	}

	"AAC: Unrailed! (Streaming)": Application Audio Capture (PipeWire) {
		Properties {
			Match Priority = Match by app name, fallback to binary name
			Application = "FMOD Audio" # ???
			Capture all apps except selected = false
		}
	}

	"AACs: Unrailed!": Group {
		sources {
			"AAC: Unrailed! (Recording)"
			"AAC: Unrailed! (Streaming)"
		}
	}

	#endregion

	#endregion

	#region Scene: Water Background

	"Water Background Dimmer": Color Source {
		Properties {
			Color = rgba(0, 0, 0, 0.5)
			Width = <canvas width>
			Height = <canvas height>
		}
	}

	"Water Background Image Slide Show": Image Slide Show {
		Properties {
			Visibility Behavior = Stop when not visible, restart when visible
			Slide Mode = Automatic
			Transition = Fade
			Time Between Slides = 3000 ms
			Transition Speed = 3000 ms
			Loop = true
			Hide when slideshow is done = false
			Randomize Playback = true
			Bounding Size/Aspect Ratio = <canvas resolution>
			Image Files = [
				"./scenes/water-background/slide-show-images/"
			]
		}

		Effect Filters {
			"Color Correction": Color Correction {
				Gamma = <default>
				Contrast = <default>
				Brightness = <default>
				Saturation = <default>
				Hue Shift = <default>
				Opacity = <default>
				Color Multiply = rgb(192, 192, 255)
				Color Add = <default>
			}
		}
	}

	#endregion
}

Audio Mixer {
	# Track 1 has all sources combined with volume adjusted so that application audio isn't too loud and so that
	# microphone input is understandable over said application audio.
	# The other tracks (2-6) are used to isolate the different sources:
	#   2. Main applications (predominantly games)
	#   3. Microphone
	#   4. Discord (for voice calls, the AAC for it should be disabled if not capturing a voice call)
	#   5. Twitch alerts
	#   6. mpv (for background music)

	# Also note that all applications have two audio sources: one for recording and one for streaming.
	# The recording one has no volume adjustments to capture the full audio range. Volume can be adjusted in editing
	# software later.

	Name                                  | Volume   | Audio Monitoring   | Tracks
	                                      |          |                    | 1 | 2 | 3 | 4 | 5 | 6
	--------------------------------------+----------+--------------------+---+---+---+---+---+---
	"AAC: ANIMAL WELL (Recording)"        |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: ANIMAL WELL (Streaming)"        |  -8.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Baba Is You (Recording)"        |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: Baba Is You (Streaming)"        |  -8.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Celeste (Recording)"            |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: Celeste (Streaming)"            |  -8.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Cuphead (Recording)"            |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: Cuphead (Streaming)"            |  -8.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Dead Cells (Recording)"         |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: Dead Cells (Streaming)"         |  -8.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: DeSmuME (Recording)"            |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: DeSmuME (Streaming)"            | -10.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Discord (Recording)"            |   0.0 dB | Monitor Off        |   |   |   | x |   |
	"AAC: Discord (Streaming)"            |  -6.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Firefox (Recording)"            |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: Firefox (Streaming)"            |   0.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Ghost Master (Recording)"       |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: Ghost Master (Streaming)"       | -10.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: GTFO (Recording)"               |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: GTFO (Streaming)"               |  -8.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Halo MCC (Recording)"           |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: Halo MCC (Streaming)"           |  -8.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Hollow Knight (Recording)"      |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: Hollow Knight (Streaming)"      |  -2.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: It Takes Two (Recording)"       |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: It Takes Two (Streaming)"       |  -2.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Left 4 Dead 2 (Recording)"      |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: Left 4 Dead 2 (Streaming)"      | -10.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: mpv (Recording)"                |   0.0 dB | Monitor Off        |   |   |   |   |   | x
	"AAC: mpv (Streaming)"                |   0.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Plants vs. Zombies (Recording)" |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: Plants vs. Zombies (Streaming)" |  -8.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Star of Providence (Recording)" |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: Star of Providence (Streaming)" | -12.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Team Fortress 2 (Recording)"    |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: Team Fortress 2 (Streaming)"    | -14.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: ULTRAKILL (Recording)"          |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: ULTRAKILL (Streaming)"          | -16.0 dB | Monitor Off        | x |   |   |   |   |
	"AAC: Unrailed! (Recording)"          |   0.0 dB | Monitor Off        |   | x |   |   |   |
	"AAC: Unrailed! (Streaming)"          |  -8.0 dB | Monitor Off        | x |   |   |   |   |
	"Mic"                                 |   0.0 dB | Monitor Off        | x |   | x |   |   |
	"Twitch Alert Box"                    |   0.0 dB | Monitor and Output | x |   |   |   | x |
	"Twitch Prediction Alert Box"         |   0.0 dB | Monitor and Output | x |   |   |   | x |
}
